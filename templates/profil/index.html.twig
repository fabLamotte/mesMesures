{% extends 'base2.html.twig' %}

{% block title %}Mesure | Profil{% endblock %}

{% block stylesheets %}
    <style>
        @import url('https://fonts.googleapis.com/css?family=Poppins:400,500,600,700&display=swap');
        .goal { font-size: 32px ; }
        .graph { overflow:auto;  }

        form .fake-input.active { background:green !important; transition:background 0.3s ease; }
        form .fake-input { padding: 10px 15px; font-size:15px; color:white; cursor:pointer; background: grey; border:1px solid white; }
        form .bloc-profil-sportif { font-size:13px; cursor:pointer; }
        form .bloc-profil-sportif input { cursor:pointer; background:white; }
        form .bloc-profil-sportif .bloc { cursor:pointer; background:white; }
        form .bloc-profil-sportif .infobulle { font-size:13px; background:#464646; color:white; top:-50px; width:90px; padding:3px; height:50px; }
        .loading-bar {display: inline-block; width: 4px; margin-top:20px; margin-right:2px; height: 18px; border-radius: 4px; animation: loading 1s ease-in-out infinite;}
        .loading-bar:nth-child(1) {background-color: #a73e1c; animation-delay: 0; }
        .loading-bar:nth-child(2) {background-color: #a73e1c; animation-delay: 0.09s; }
        .loading-bar:nth-child(3) {background-color: #a73e1c; animation-delay: .18s; }
        .loading-bar:nth-child(4) { background-color: #a73e1c; animation-delay: .27s; }
        .coefGoalSelector { font-size:18px; }
        @keyframes loading { 0% { transform: scale(1); } 20% { transform: scale(1, 2.2); } 40% { transform: scale(1); } }
        @media screen and (max-width: 575px){.carte .image { text-align:center; } }

        .targetFirstWeight, .targetActualWeight, .targetWeightGoal { font-size:18px; }
        .gauge { width: 100%; max-width: 100px; font-family: "gravtrac", sans-serif; font-size: 22px; color: white; }
        .gauge__body { width: 100%; height: 0; padding-bottom: 50%; background: #22252C; position: relative; border-top-left-radius: 100% 200%; border-top-right-radius: 100% 200%; overflow: hidden; }
        .gauge__fill { position: absolute; top: 100%; left: 0; width: inherit; height: 100%; background: #0a8002; transform-origin: center top; transform: rotate(0turn); transition: transform 0.2s ease-out; }
        .gauge__cover { width: 75%; height: 150%; background: #3E4756; border-radius: 50%; position: absolute; top: 25%; left: 50%; transform: translateX(-50%); /* Text */ display: flex; align-items: center; justify-content: center; padding-bottom: 25%; box-sizing: border-box; }
    </style>
{% endblock %}

{% block body %}
    <section class="m-0 p-0 bloc goal rounded col-12 custom-color">
      <div class="row">
        <button class="d-none" id="forgotModal" data-toggle="modal" data-target="#infosManquantes"></button>
        {% include 'profil/modal/informations_manquantes.html.twig' %}
        {# POIDS #}
          <div class="col-xl-3 col-lg-3 col-md-6 col-sm-6 col-xs-12 p-2">
            <div class="d-flex flex-column align-items-center">
              <div class="text-white">Objectif poids</div>
                {# Poids actuel #}
                <div class="d-flex justify-content-center targetActualWeight">
                  {% if datas.weight_actual is defined and datas.weight_actual is not null %}
                    <div>{{ datas.weight_actual }} kg</div>
                  {% else %}
                    <div>0 kg</div>
                  {% endif %}
                </div>
                <div class="d-flex justify-content-center" style="width:100%;">
                  {# Premier poids #}
                  <div class="targetFirstWeight mr-2 d-flex align-items-end">
                    {% if datas.weight_first is defined and datas.weight_first is not null %}
                      <div>{{ datas.weight_first }} kg</div> 
                    {% else %}
                      <div>0 kg</div>
                    {% endif %}
                  </div>
                  {# Jauge objectif #}
                  <div class="gauge">
                    <div class="gauge__body">
                      <div class="gauge__fill"></div>
                      <div class="gauge__cover"></div>
                    </div>
                  </div>
                  {# Poids Objectif #}
                  <div class="targetWeightGoal ml-2 d-flex align-items-end">
                    {% if datas.weight_goal is defined and datas.weight_goal is not null %}
                      {{ datas.weight_goal }} kg
                    {% else %}
                      0 kg
                    {% endif %}
                  </div>
                </div>
              </div>
            </div>
        {# Mesures restantes #}
          <div class="col-xl-3 col-lg-3 col-md-6 col-sm-6 col-xs-12 p-2">
            <div class="d-flex flex-column align-items-center text-center">
              <div class="text-white">Mesures restantes</div>
              <div class="mesuresRestantesSelector" data-value="{{ datas.nombre_mesures_restantes }}">
                {% if datas.nombre_mesures_restantes is null %}
                  <div>0 restantes</div>
                {% else %}
                  <div>{{ datas.nombre_mesures_restantes }} restantes</div>
                {% endif %}
              </div>
            </div>
          </div>
        {# Calories quotidienne minimum #}  
          <div class="col-xl-3 col-lg-3 col-md-6 col-sm-6 col-xs-12 p-2">
            <div class="d-flex flex-column align-items-center text-center">
              <div class="text-white">Besoin calorique de base</div>
              <div class="calorieSelector" data-value="{{ datas['besoin_calorique_de_base'] }}">
                {% if datas.besoin_calorique_de_base is null %}
                  0 kCal
                {% else %}
                  {{ datas.besoin_calorique_de_base }} kCal
                {% endif %}
              </div>
            </div>
          </div>
        {# IMC #}
          <div class="col-xl-3 col-lg-3 col-md-6 col-sm-6 col-xs-12 p-2">
            <div class="d-flex flex-column align-items-center">
              <div class="text-white">IMC</div>
              {% if datas.imc is null %}
                <div class="imcSelector">En cours</div>
              {% else %}
                <div class="imcSelector" data-value="{{ datas['imc'] }}">{{ datas['imc'] }}</div>
              {% endif %}
            </div>
          </div>
      </div>
    </section>
    <section class="m-0 p-0 bloc graph rounded col-12">
      {% include 'profil/graph.html.twig' %}
    </section>
{% endblock %}
{% block javascripts %}<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="{{ asset('js/jquery.js') }}" type="text/javascript"></script>
    {# script général #}
    <script>
      $(document).ready(function(){
        // Récupération de variable à traiter
          var weightActualSelector = $('.targetWeightActual').attr('data-value');
          var weightGoalSelector = $('.targetWeightGoal').attr('data-value');
          var coefGoalSelector = $('.coefGoalSelector').attr('data-value');
          var mesureRestantes = $('.mesuresRestantesSelector').attr('data-value');
          var calorie = $('.calorieSelector').attr('data-value');
          var imc = $('.imcSelector').attr('data-value');
          const gaugeElement = document.querySelector(".gauge");
          if(weightGoalSelector == '' || mesureRestantes == '' || calorie == '' || imc == ''){
            $('#forgotModal').trigger('click');
          }

          if(coefGoalSelector === null || coefGoalSelector === "" || coefGoalSelector === undefined){
            setGaugeValue(gaugeElement, 0);
          } else {
            setGaugeValue(gaugeElement,coefGoalSelector);
          }
      });
      // Validation du formulaire "informations manquantes"
        $('#submitMissInfosForm').click(function(e){
          e.preventDefault();
          var age = $('.ageInput').val();
          var poids = $('.poidsInput').val();
          var objectif_poids = $('.objectifPoidsInput').val();
          var taille = $('.tailleInput').val();
          var sexe = $('.fake-input.active').attr('data-attribute');
          var profil_sportif = $('.bloc-profil-sportif input.checked').val();
          var load = '<div class="loading"> <div class="loading-bar"></div> <div class="loading-bar"></div> <div class="loading-bar"></div> <div class="loading-bar"></div> </div>';

          $.ajax({
            url:"{{ path('add_missed_info') }}",
            type:"post",
            data: { age:age, poids:poids, objectif_poids:objectif_poids, taille:taille, sexe:sexe, profil_sportif:profil_sportif },
            beforeSend: function(){
              // Affichage animation chargement
                $('.modal-footer button').hide();
                $('.modal-footer').append(load);
            }, 
            success:function(response){
              if(response['state'] === 'success'){
                $('.modal-footer').find('.loading').remove();
                var selector = $('.modal-footer');
                var message = '<div class="text-success">' + response['message'] + '</div>';
                selector.append(message);
                setTimeout(function () { jQuery('#closeModal').trigger('click'); }, 1000);
                reloadInfo();
              } else {
                $('.modal-footer button').show();
                $('.modal-footer').find('.loading').remove();
                var selector = $(response['input']);
                var message = '<div class="error-message position-absolute" style="top:-35px; background:#464646; color:white; font-size:13px; padding:5px; border:1px solid red;">' + response['message'] + '.</div>';
                selector.parent().append(message).find('.error-message').delay(1500).fadeOut(400);
              }
            }
          });
        });
      // Gestion du switch entre homme et femme dans le formulaire
        $('.fake-input').click(function(){
          var thisSelector = $(this);
          var thisAttribute = $(this).attr('data-attribute');
          if(!thisSelector.hasClass('active')){
            $('.fake-input[data-attribute!=' + thisAttribute + ']').removeClass('active');
            thisSelector.addClass('active');
          }
        });
      // Affichage des infobulles au survol
        $('.bloc-profil-sportif').mouseover(function(){
          var infobulle = $(this).find('.infobulle');
          if(infobulle.hasClass('d-none')){
            infobulle.addClass('d-flex');
            infobulle.removeClass('d-none');
          }
        });
        $('.bloc-profil-sportif').mouseleave(function(){
          var infobulle = $(this).find('.infobulle');
          if(infobulle.hasClass('d-flex')){
            infobulle.removeClass('d-flex');
            infobulle.addClass('d-none');
          }
        });
        $('input[name=profilSportif]').click(function(){
          $('input[name=profilSportif]').removeClass('checked');
          $(this).addClass('checked');
        });
      // Fonction de rechargement des informations
        function reloadInfo(){
          $.ajax({
            url:"{{ path('reload_info') }}",
            type:"post",
            success: function(response){
              // Affichage du besoin calorique journalier
                if(response['besoinCal'] !== null){
                  $('.calorieSelector').empty().append(response['besoinCal'] + ' kCal');
                }

              // Affichage de l'imc
                if(response['imc'] !== null){
                  $('.imcSelector').empty().append(response['imc']);
                }

              // Affichage du nombre de mesure restantes
                if(response['mesuresRestante'] !== null){
                  $('.mesuresRestantesSelector').empty().append(response['mesuresRestante'] + ' restantes');
                }

              // Affichage de l'objectif poids
                if(response['objPoids'] !== null){
                  $('.targetActualWeight').empty().append(response['ActualPoids'] + ' kg');
                  $('.targetFirstWeight').empty().append(response['firstPoids'] + ' kg');
                  $('.targetWeightGoal').empty().append(response['objPoids'] + ' kg');
                  var coefPoids = response['coefPoids'];
                  const gaugeElement = document.querySelector(".gauge");
                  setGaugeValue(gaugeElement, coefPoids);
                }
            }
          });
        }
      // Fonction d'animation 
        function setGaugeValue(gauge, value) {
          if (value < 0 || value > 1) {
            return;
          }
          gauge.querySelector(".gauge__fill").style.transform = `rotate(${
            value / 2
          }turn)`;
          gauge.querySelector(".gauge__cover").textContent = `${Math.round(
            value * 100
          )}%`;
        }
    </script>
    {# script de graph #}
    <script type="text/javascript">
      $(document).ready(function(){

      });
      var ctx = document.getElementById('myChart').getContext('2d');
      var myChart = new Chart(ctx, {
          type: 'line',
          data: {
              labels: ['Janvier', 'Février', 'Mars', 'Avril', 'Mai', 'Juin'],
              datasets: [{
                  data: [12, 19, 3, 5, 2, 3],
                  borderColor: [
                      'white',
                  ],
                  borderWidth: 1
              }]
          },
      });
    </script>
{% endblock %}